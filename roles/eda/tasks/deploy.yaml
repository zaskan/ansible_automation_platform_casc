---
- name: Include EDA variables
  ansible.builtin.include_vars:
    file: "{{ item }}"
  loop: "{{ lookup('fileglob', eda_vars_dir, wantlist=True) }}"

- name: Create User token
  infra.eda_configuration.user_token:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    token: "{{ generated_controller_token.results[0].ansible_facts.controller_token.token }}"
  loop: "{{ eda_tokens }}"
  when:
    - eda_tokens is defined

- name: Create Container Registry Credential
  infra.eda_configuration.credential:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    username: "{{ item.username }}"
    secret: "{{ item.secret }}"
    credential_type: "{{ item.credential_type }}"
    state: present
  loop: "{{ eda_credentials }}"
  when:
    - eda_credentials is defined

- name: Create Decision Environments
  infra.eda_configuration.decision_environment:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    image_url: "{{ item.image_url }}"
    credential: "{{ item.credential | default(omit) }}"
    state: present
  loop: "{{ decision_environments }}"
  when:
    - decision_environments is defined

- name: Create Projects
  infra.eda_configuration.project:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    url: "{{ item.url }}"
    state: present
  loop: "{{ eda_projects }}"
  register: project_status
  when:
    - eda_projects is defined
  until: project_status != ""

- name: Create Rulebook Activation
  infra.eda_configuration.rulebook_activation:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    project: "{{ item.project }}"
    rulebook: "{{ item.rulebook }}"
    decision_environment: "{{ item.decision_environment }}"
    extra_vars: "{{ item.extra_vars | default(omit) }}"
    enabled: true
    awx_token: "{{ item.awx_token }}"
    state: present
    restart_policy: always
  loop: "{{ activations }}"
  when:
    - activations is defined

- name: Create eda users
  infra.eda_configuration.user:
    username: "{{ item.username }}"
    first_name: "{{ item.name | default(omit) }}"
    last_name: "{{ item.last | default(omit) }}"
    email: "{{ item.email | default(omit) }}"
    password: "{{ item.password }}"
    roles: "{{ item.roles  }}"
    state: present
  loop: "{{ eda_users }}"
  when: 
    - eda_users is defined
